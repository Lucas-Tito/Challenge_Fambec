@using Challenge_Fambec.Client.Shared
@using Challenge_Fambec.Client.Services
@inject IFirebaseAuthService FirebaseAuth
@inject NavigationManager Navigation

<div class="relative">
    @* Panel Toggle Button *@
    <button type="button" @onclick="ToggleSidebar" class="panel-toggle-btn">
        <span class="sr-only">Abrir menu</span>
        <SidebarIcon Style="width: 2.5rem; height: 2.5rem;" />
    </button>

    @* Sidebar Panel *@
    <aside class="@(isOpen ? "sidebar-panel" : "hidden sidebar-panel")">
        @* Sidebar Header *@
        <div class="sidebar-header">
            <h2 class="sidebar-header-text">Fambec</h2>
            <div class="theme-switcher-container">
                 <div>
                    <button type="button" onclick="window.toggleTheme(); window.updateThemeIcons();" class="theme-switcher-btn" id="theme-toggle">
                        <MoonIcon Style="width: 1.25rem; height: 1.25rem;" />
                        <SunIcon Style="width: 1.25rem; height: 1.25rem; display: none;" />
                    </button>
                </div>
                @* Close Sidebar Button *@
                <button type="button" @onclick="ToggleSidebar" class="p-1 close-sidebar-btn">
                    <span class="sr-only">Fechar menu</span>
                    <CloseIcon Style="width: 1.5rem; height: 1.5rem;" />
                </button>
            </div>
        </div>

        @* Sidebar Body *@
        <nav id="boards_list_container" class="sidebar-body">
            <button type="button" @onclick="NavigateToHome" class="ai-summary-btn">
                Home
            </button>
            <button type="button" @onclick="NavigateToAI" class="ai-summary-btn">
                AI Summary
                <SparklesIcon Style="width: 1.25rem; height: 1.25rem; margin-left: 0.25rem;" />
            </button>
            
            @* Logout button *@
            @if (currentUser != null)
            {
                <div style="margin-top: auto; padding: 1rem; border-top: 1px solid var(--color-border);">
                    <button type="button" @onclick="SignOut" class="ai-summary-btn" style="gap: 0.5rem;">
                        <LogoutIcon Style="width: 1.15rem; height: 1.15rem; fill: var(--color-secondary);"/>
                        Sign Out
                    </button>
                </div>
            }
        </nav>
    </aside>
</div>

@code {
    private bool isOpen = false;
    private UserDto? currentUser;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await FirebaseAuth.GetCurrentUserAsync();
        FirebaseAuth.AuthStateChanged += OnAuthStateChanged;
    }

    private void OnAuthStateChanged(UserDto? user)
    {
        currentUser = user;
        StateHasChanged();
    }

    private void ToggleSidebar()
    {
        isOpen = !isOpen;
    }

    private void NavigateToHome()
    {
        Navigation.NavigateTo("/");
        isOpen = false; // Close sidebar after navigation
    }

    private void NavigateToAI()
    {
        Navigation.NavigateTo("/summary");
        isOpen = false; // Close sidebar after navigation
    }

    private async Task SignOut()
    {
        await FirebaseAuth.SignOutAsync();
        isOpen = false; // Close sidebar after logout
    }

    public void Dispose()
    {
        FirebaseAuth.AuthStateChanged -= OnAuthStateChanged;
    }
}